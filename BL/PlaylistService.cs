using System;
using System.Collections.Generic;
using DAL;
using Persistence;
using MySql.Data.MySqlClient;

namespace BL
{
    public class PlaylistService
    {
        private readonly PlaylistDAL playlistDAL = new PlaylistDAL();
        private readonly SongDAL songDAL = new SongDAL();

        // T·∫°o playlist m·ªõi v√† th√™m c√°c b√†i h√°t
        public bool CreatePlaylist(string playlistName, List<Song> songs)
        {
            try
            {
                // Th√™m playlist v√†o b·∫£ng `playlists`
                int playlistId = playlistDAL.AddPlaylist(playlistName);

                // Th√™m t·ª´ng b√†i h√°t v√†o b·∫£ng `songs` v√† li√™n k·∫øt v·ªõi playlist
                foreach (var song in songs)
                {
                    // Th√™m b√†i h√°t v√†o b·∫£ng `songs`
                    songDAL.AddSong(song.Title, song.ArtistId, song.Album, song.Genre, song.ReleaseDate);

                    // L·∫•y songId c·ªßa b√†i h√°t v·ª´a th√™m (gi·∫£ s·ª≠ songId l√† t·ª± tƒÉng)
                    int songId = GetLastInsertedSongId();

                    // Li√™n k·∫øt b√†i h√°t v·ªõi playlist trong b·∫£ng `playlist_songs`
                    playlistDAL.AddSongToPlaylist(playlistId, songId);
                }

                return true;
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error creating playlist: {ex.Message}");
                return false;
            }
        }

        // L·∫•y songId c·ªßa b√†i h√°t v·ª´a th√™m v√†o b·∫£ng `songs`
        private int GetLastInsertedSongId()
        {
            int songId = 0;
            using (MySqlConnection conn = new MySqlConnection("Server=localhost;Database=SpotifyDB;Uid=root;Pwd=Duong7198!;"))
            {
                conn.Open();
                string query = "SELECT LAST_INSERT_ID();";
                using (MySqlCommand cmd = new MySqlCommand(query, conn))
                {
                    songId = Convert.ToInt32(cmd.ExecuteScalar());
                }
            }
            return songId;
        }

        public Playlist? SearchPlaylist(int playlistId)
        {
            if (playlistId <= 0)
            {
                Console.WriteLine("‚ùå Invalid ID. Please enter a valid number.");
                return null;
            }

            var playlist = playlistDAL.GetPlaylistById(playlistId); // üîπ G·ªçi DAL ƒë·ªÉ l·∫•y th√¥ng tin ngh·ªá sƒ©

            if (playlist == null)
            {
                Console.WriteLine("‚ùå Playlist not found.");
            }

            if (playlist.Songs == null || playlist.Songs.Count == 0)
            {
                Console.WriteLine("Playlist is empty.");
            }

            return playlist;
        }

        public bool DeletePlaylist(int playlistId)
        {
            PlaylistDAL playlistDAL = new PlaylistDAL(); //T·∫°o 1 ƒë·ªëi t∆∞·ª£ng PlaylistDAL ƒë·ªÉ l√†m vi·ªác v·ªõi database
            bool isDeleted = playlistDAL.DeletePlaylistById(playlistId); //G·ªçi ph∆∞∆°ng th·ª©c DeletePlaylistById trong playlistId

            if (isDeleted)
            {
                return true;
            }
            else
            {
                System.Console.WriteLine("‚ùå Playlist not found!");
                return false;
            }
        }

        public List<Playlist> GetAllPlaylists()
        {
            return playlistDAL.GetAllPlaylists(); 
        }
    }
}